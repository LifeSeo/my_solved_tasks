print('Задача 1. Должники')

# В базе банка хранятся данные и должников, и законопослушных граждан.
# Каждому человеку система присваивает свой номер. У нас есть случайная
# выборка из десяти номеров. Правда, иногда база глючит и выдаёт номер
# с отрицательным значением. А ещё по статистике, которую собрал наш «МирПрогБанк»,
# каждый второй пользователь брал кредит и не выплатил его вовремя,
# то есть является должником.

# Напишите программу, которая при вводе десяти чисел определяет,
# сколько из них являются одновременно чётными и положительными.

from random import randint as rnd

start = -99
finish = 99
counter = 0

def digits(start, finish, counter):
    lst = []
    for i in range(10):
        lst.append(rnd(start, finish))
    print("Выводим сгенерированный список: ", lst)
      
    for j in lst:
        if j < 0 and j % 2 != 0:
            print("Число отрицательное и не делится на 2")
        elif j < 0 and j % 2 == 0:
            print("Число отрицательное, но делится на 2")
        elif j > 0 and j % 2 != 0:
            print("Число положительное, но не делится на 2")
        elif j > 0 and j % 2 == 0:
             print("Число положительное и делится на 2")
             counter += 1
    print("Всего положительных чисел, которые делятся на два:", counter)
       
digits(start, finish, counter)

print('Задача 2. Посчитай чужую зарплату...')

# Бухгалтер устала постоянно считать вручную среднегодовую зарплату
# сотрудников компании
# и, чтобы облегчить себе жизнь, обратилась к программисту.
 
# Напишите программу,
# которая принимает от пользователя зарплату сотрудника за каждый
# из 12 месяцев 
# и выводит на экран среднюю зарплату за год.

def salary():
    lst = []
    for i in range(1, 13):
        lst.append(int(input(f"Введите зарплату за {i} месяц: ")))
    print("Выводим списком помесячные зарплаты:", lst)
    
    salary_middle = 0
    for j in lst:
        
        salary_middle += j
    return salary_middle / 12
    
result = salary()
print("Среднемемсячная зарплата составляет:", result)

print('Задача 3. Факториал')

# Мы всё ближе и ближе подбираемся к серьёзной математике.
# Одна из классических задач - задача на нахождение факториала числа.
# И в будущем мы с ней ещё встретимся.
# 
# Дано натуральное число N. Напишите программу, которая находит N! (N факториал)
# 
# Запись N! означает следующее:
# 
# N! = 1 * 2 * 3 * 4 * 5 * … * N
# 
# Пример:
# 
# Введите число: 5
# Факториал числа 5 равен 120

number = int(input("Введите число: "))

def factorial(number):
    result = 1
    for i in range(1, number+1):
        result *= i
    return result

n = factorial(number)
print(f"Факториал числа {number} = {n}")

print('Задача 4. Успеваемость в классе')

# В классе N человек.
# Каждый из них получил за урок по информатике оценку: 3, 4 или 5,
# двоек сегодня не было. 
# 
# Напишите программу, 
# которая получает список оценок - N чисел - и выводит на экран сообщение о том, 
# кого сегодня больше: отличников, хорошистов или троечников.

# Замечание: можно предположить, что количество отличников, хорошистов,
# троечников различно.

from random import randint as rnd

n = int(input("Введите количество человек в классе: "))
start = 3
finish = 5
lst = []
# генерируем список оценок для всех учеников

for i in range(n):
    
    lst.append(rnd(start, finish))
print("Список оценок, которые получили ученики:", lst)

# подсчитываем отличников, хорошистов или троечников
rate_5 = 0
rate_4 = 0
rate_3 = 0
for j in lst:
    if j == 5: rate_5 += 1
    elif j == 4: rate_4 += 1
    elif j == 3: rate_3 +=1
    else: print("Преподаватель не ставил такую оценку")
print(f"Отличников: {rate_5}, Хорошистов {rate_4}, троешников {rate_3}")

# определяем, кого больше

if rate_5 > rate_4 and rate_5 > rate_3:
    print("Больше всего отличников")
elif rate_4 > rate_5 and rate_4 > rate_3:
    print("Больше всего хорошистов")
else:
    print("Больше всего троешников")

print('Задача 5. Отрезок')

# Напишите программу,
# которая считывает с клавиатуры два числа a и b,
# считает и выводит на консоль 
# среднее арифметическое всех чисел из отрезка [a; b], которые кратны числу 3.

# (среднее арифметическое можно посчитать поделив сумму подходящих чисел на их количество)

a = int(input("Введите первое число: "))
b = int(input("Введите второе число: "))

def arithmetic_mean(a, b):
    summa = 0
    elements = 0
    if a < b:
        for i in range(a, b):
            summa += i
            elements += 1
    else:
        for i in range(b, a):
            summa += i
            elements += 1
    print(f"Общая сумма {summa}, количество элементов {elements},\n"
          f"среднее арифметическое {summa / elements}") 

arithmetic_mean(a, b)

print('Задача 6. Замечательные числа')

# Напишите программу,
# которая находит и выводит все двузначные числа,
# которые равны утроенному произведению своих цифр.
# К таким относятся, например, 15 и 24.

# Пояснение:
# 15 -> 1*5*3 = 15 - получившееся число равно оригиналу, значит число надо вывести
# 16 -> 1*6*3 = 18 - число выводить не нужно, 18 не равно 16

lst = []
lst_final = []

for i in range(10, 99):
    lst.append(i)
print("Сгенерированный список 2-х значных чисел:", lst)


for i in lst:
    if (i % 10) * (i // 10) * 3 == i:
        lst_final.append(i)
print("Список нужных чисел:", lst_final)

print('Задача 7. Пропавшая карточка')

# Для настольной игры используются карточки с номерами от 1 до N.
# Одна карточка потерялась.
# Найдите ее, зная номера оставшихся карточек.
# 
# Вводится число N,
# далее еще N − 1 чисел: 
# номера оставшихся карточек (различные числа от 1 до N).
# Программа должна вывести номер потерянной карточки.

# Пример:
# Введите количество карточек: 5
# Введите номер оставшейся карточки: 1
# Введите номер оставшейся карточки: 4
# Введите номер оставшейся карточки: 5
# Введите номер оставшейся карточки: 3

# Номер пропавшей карточки: 2

all_cards = int(input("Введите количество карточек: "))
lst_1 = []
lst_2 = []

def check_cards(all_cards):
    for i in range(all_cards):
        lst_1.append(i+1)
    print("Весь список карточек", lst_1)
    
    for i in range(all_cards - 1):
        lst_2.append(int(input(f"Введите номер карточки от 1 до {all_cards}: ")))
    print("Список введенных карточек", lst_2)
    
    print("Недостающая(ии) карточка(и):", list(set(lst_1) - set(lst_2)))
           
check_cards(all_cards)
    