print('Задача 1. Сумма чисел')

# Напишите функцию summa_n,
# которая принимает одно целое положительное число N
# и выводит сумму всех чисел от 1 до N включительно.
#
# Пример работы программы:
# Введите число: 5
#
# Я знаю, что сумма чисел от 1 до 5 равна 15

n = int(input("Введите целое положительное число: "))

while n < 0:
  n = int(input("Число отрицательное. Введите целое положительное число: "))


def summa_n(n):
  summa = 0
  for i in range(1, n + 1):
    summa += i
  return summa


amount = summa_n(n)
print(f"Сумма чисел от 1 до {n} равна {amount}")

print('Задача 2. Функция в функции')

# Евгений проходит специальный тест по программированию.
# У него всё шло хорошо, пока он не наткнулся на тему “Функции”.
#
# Задание звучит так:
# Основная ветка программы, не считая заголовков функций, состоит из одной строки кода.
#
# Это вызов функции test().
# В ней запрашивается на ввод целое число.
# Если оно положительное, то вызывается функция positive(),
# тело которой содержит команду вывода на экран слова "Положительное".
#
# Если число отрицательное, то вызывается функция negative(),
# ее тело содержит выражение вывода на экран слова "Отрицательное".
#
# Помогите Евгению и реализуйте такую программ

n = int(input("Введите целое число: "))


def test(n):
  if n == 0:
    print(f"Число 0 не является положительным или отрицательным")
  elif n < 0:
    negative()
  else:
    positive()


def positive():
  print(f"Число {n} положительное")


def negative():
  print(f"Число {n} отрицательное")


test(n)

print('Задача 3. Апгрейд калькулятора')

# Степан использует калькулятор для расчёта суммы и разности чисел,
# но на работе ему требуются не только обычные арифметические действия.
# Он ничего не хочет делать вручную, поэтому решил немного расширить
# функционал калькулятора.

# Напишите программу, запрашивающую у пользователя число и действие,
# которое нужно сделать с числом: вывести сумму его цифр, максимальную
# или минимальную цифру.

# Каждое действие оформите в виде отдельной функции, а основную программу зациклите.

# Запрошенные числа должны передаваться в функции суммы, максимума и
# минимума при помощи аргументов.

n = int(input("Введите число: "))

lst = []

while len(str(n)) <= 1:
  n = int(input("Контроль ввода. Введите число, а не цифру: "))



check_act = 1


def check_action():
    action = int(input("Вывести сумму цифр - 1, "
        "максимальную цифру - 2 или минимальную цифру - 3: "))
    if action == 1:
        summa(n)
    elif action == 2:
        max_digit(n)
    else:
        min_digit(n)


def summa(n):
  summa = 0
  for i in range(0, n):
    summa += n % 10
    n = n // 10
  print("Сумма", summa)


def max_digit(n):
  digit = 0
  for i in range(len(str(n))):
    digit = n % 10
    lst.append(digit)
    n //= 10
  print("Максимальная цифра", max(*lst))


def min_digit(n):
  digit = 0
  for i in range(len(str(n))):
    digit = n % 10
    lst.append(digit)
    n //= 10
  print("Минимальная цифра", min(*lst))


while True:
    
    if check_act == 0:
        print("Работа программы приостановлена")
        break
    else:
        check_action()
    check_act = int(input("Хотите продолжить? Да - 1, Нет - 0: "))



print('Задача 4. Число наоборот')

# Вводится последовательность чисел,
# которая оканчивается нулём.
#
# Реализуйте функцию,
# которая принимает в качестве аргумента каждое число,
# переворачивает его и выводит на экран.

# Пример:
# Введите число: 1234
# Число наоборот: 4321
#
# Введите число: 1000
# Число наоборот: 0001
#
# Введите число: 0
# Программа завершена!
#
# Дополнительно: добейтесь такого вывода чисел, если в его начале идут нули.
#
# Введите число: 1230
# Число наоборот: 321
#
# Кстати, нули, которые мы убрали, называются ведущими.

n = int(input("Введите число: "))


def n_back(n):
  n_str = str()
  for i in range(len(str(n))):
    digit = n % 10
    if (n % 10) != 0:
      n_str += str(digit)
      n //= 10
    else:
      n //= 10
  print("Первернутое число:", int(n_str))


n_back(n)

print('Задача 5. Текстовый редактор')

# Мы продолжаем разрабатывать новый текстовый редактор,
# и в этот раз нам поручили написать для него код,
# который считает количество любой буквы
# и любой цифры в тексте (а не только буквы Ы как раньше).
#
# Напишите функцию count_letters,
# которая принимает на вход текст и подсчитывает,
# какое в нём количество цифр K и букв N.
#
# Функция должна вывести на экран информацию
# о найденных буквах и цифрах в определенном формате.
#
# Пример:
# Введите текст: 100 лет в обед
# Какую цифру ищем? 0
# Какую букву ищём? л
#
# Количество цифр 0: 2
# Количество букв л: 1

text = (input("Введите текст с цифрами: "))
digit = int(input("Какую цифру ищем? "))
letter = input("Какую букву ищем? ")

text = text.lower()
letter = letter.lower()


def count_letters(text, digit, letter):
  counter_letters = 0
  counter_digits = 0
  for i in text:
    if i == letter:
      counter_letters += 1
    elif i == str(digit):
      counter_digits += 1
  print(f"Количество цифр {digit} = {counter_digits}")
  print(f"Количество букв {letter} = {counter_letters}")


count_letters(text, digit, letter)

print('Задача 6. НОД')

# Напишите функцию, вычисляющую наибольший общий делитель двух чисел

n_1 = int(input("Введите первое число: "))
n_2 = int(input("Введите второе число: "))
lst_1 = []
lst_2 = []
lst_3 = []


def max_divider(n_1, n_2, lst_1, lst_2, lst_3):
  for i in range(1, n_1 + 1):
    if n_1 % i == 0:
      lst_1.append(i)
  print(f"Все делители числа {n_1}: {lst_1}")
  for j in range(1, n_2 + 1):
    if n_2 % j == 0:
      lst_2.append(j)
  print(f"Все делители числа {n_2}: {lst_2}")
  for k in lst_1:
    if k in lst_2:
      lst_3.append(k)
  print(f"Максимальный делитель чисел {n_1} и {n_2} = {max(lst_3)}")


max_divider(n_1, n_2, lst_1, lst_2, lst_3)

print('Задача 7. Недоделка')

# Вы пришли на работу в контору по разработке игр,
# целевая аудитория которых - дети и их родители.
#
# У прошлого программиста было задание
# сделать две игры в одном приложении, чтобы пользователь мог выбирать одну из них.
#
# Однако программист, на место которого вы пришл
# и, перед увольнением не успел сделать эту задачу и оставил только
# небольшой шаблон проекта.
#
# Используя этот шаблон,
# реализуйте игры «Камень, ножницы, бумага» и «Угадай число».
#
# Правила игры «Камень, ножницы, бумага»:
# программа запрашивает у пользователя строку
# и выводит победил он или проиграл.
#
# Камень бьёт ножницы, ножницы режут бумагу, бумага кроет камень.
#
# Правила игры “Угадай число”:
# программа запрашивает у пользователя число до тех пор, пока он его не отгадает.


def mainMenu():
  game_choose = int(
    input("Выберите игру. Угадай число - 1, Камень, ножницы, бумага - 2: "))
  if game_choose == 1:
    guess_the_number()
  elif game_choose == 2:
    rock_paper_scissors()
  else:
    print("Ошибка ввода")


def rock_paper_scissors():
  rock_paper = int(input("Загадайте, камень - 1, ножницы - 2, бумага - 3: "))
  rock = int(
    input("Ваш ход. Загадайте, камень - 1, ножницы - 2, бумага - 3: "))
  if rock_paper == 1 and rock == 2:
    print("Вы проиграли. Камень бьёт ножницы")
  elif rock_paper == 2 and rock == 1:
    print("Вы выиграли. Камень бьёт ножницы")
  elif rock_paper == 2 and rock == 3:
    print("Вы проиграли. Ножницы режут бумагу")
  elif rock_paper == 3 and rock == 2:
    print("Вы выиграли. Ножницы режут бумагу")
  elif rock_paper == 3 and rock == 1:
    print("Вы проиграли. Бумага кроет камень")
  elif rock_paper == 1 and rock == 3:
    print("Вы выиграли. Бумага кроет камень")
  else:
    print("Нет решения")


def guess_the_number():
  guess_number = int(input("Загадайте число: "))
  guess = int(input("Какое число загадано? "))
  while guess != guess_number:
    guess = int(input("Не верно! Еще раз. Какое число загадано? "))
  if guess == guess_number:
    print("Вы выиграли, игра окончена!")
    mainMenu()


mainMenu()
